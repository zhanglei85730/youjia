{"version":3,"file":null,"sources":["../src/util.js","../src/ajax.js","../src/jsonp.js","../src/request.js","../src/defer.js","../src/event.js","../src/plugin.loop.js","../src/plugin.soon.js","../src/default-global-config.js","../src/natty-fetch.js"],"sourcesContent":["export const hasWindow = 'undefined' !== typeof window\nexport const hasConsole = 'undefined' !== typeof console\nexport const doc = hasWindow ? document : null\nexport const escape = encodeURIComponent\nexport const NULL = null\nexport const TRUE = true\nexport const FALSE = !TRUE\nexport const UNDEFINED = 'undefined'\nexport const EMPTY = ''\n\nconst toString = Object.prototype.toString\nconst ARRAY_TYPE = '[object Array]'\nconst OBJECT_TYPE = '[object Object]'\n\n/**\n * 伪造的`promise`对象\n * NOTE 伪造的promise对象要支持链式调用 保证和`new Promise`返回的对象行为一致\n *      dummyPromise.then().catch().finally()\n */\nexport const dummyPromise = {\n    dummy: TRUE\n}\n\ndummyPromise.then = dummyPromise['catch'] = () => {\n    // NOTE 这里用了剪头函数 不能用`return this`\n    return dummyPromise\n}\n\n/**\n * 判断是否是IE8~11, 不包含Edge\n * @returns {boolean}\n * @note IE11下 window.ActiveXObject的值很怪异, 所以需要追加 'ActiveXObject' in window 来判断\n */\nexport const isIE = hasWindow && (!!window.ActiveXObject || 'ActiveXObject' in window)\n\nexport function noop(v) {\n    return v\n}\n\n/**\n * 变换两个参数的函数到多个参数\n * @param  {Function} fn 基函数\n * @return {Function} 变换后的函数\n * @demo\n *      function add(x, y) { return x+y; }\n *      add = redo(add);\n *      add(1,2,3) => 6\n */\nexport function redo(fn) {\n    return function () {\n        var args = arguments\n        var ret = fn(args[0], args[1])\n        for (var i = 2, l = args.length; i < l; i++) {\n            ret = fn(ret, args[i])\n        }\n        return ret\n    }\n}\n\nconst random = Math.random\nconst floor = Math.floor\nexport function makeRandom() {\n    return floor(random() * 9e9)\n}\n\nconst absoluteUrlReg = /^(https?:)?\\/\\//\nexport function isAbsoluteUrl(url) {\n    return !!url.match(absoluteUrlReg)\n}\n\nconst relativeUrlReg = /^[\\.\\/]/\nexport function isRelativeUrl(url) {\n    return !!url.match(relativeUrlReg)\n}\n\nconst BOOLEAN = 'boolean'\nexport function isBoolean(v) {\n    return typeof v === BOOLEAN\n}\n\nconst STRING = 'string'\nexport function isString(v) {\n    return typeof v === STRING\n}\n\nconst FUNCTION = 'function'\nexport function isFunction(v) {\n    return typeof v === FUNCTION\n}\n\nexport function runAsFn(v) {\n    return isFunction(v) ? v() : v\n}\n\nconst NUMBER = 'number'\nexport function isNumber(v) {\n    return !isNaN(v) && typeof v === NUMBER\n}\n\nconst OBJECT = 'object'\nexport function isObject(v) {\n    return typeof v === OBJECT && v !== NULL\n}\n\nexport function isWindow(v) {\n    return v !== NULL && v === v.window\n}\n\n// 参考了zepto\nexport function isPlainObject(v) {\n    return v !== NULL && isObject(v) && !isWindow(v) && Object.getPrototypeOf(v) === Object.prototype\n}\n\nexport function isEmptyObject(v) {\n    let count = 0\n    for (let i in v) {\n        if (v.hasOwnProperty(i)) {\n            count++\n        }\n    }\n    return count === 0\n}\n\nexport function isArray(v) {\n    return toString.call(v) === ARRAY_TYPE\n}\n\n/**\n * 判断是否跨域\n * @type {Element}\n * @note 需要特别关注IE8~11的行为是不一样的!!!\n */\nlet originA\nif(doc) {\n    originA = doc.createElement('a')\n    originA.href = location.href\n}\nexport function isCrossDomain(url) {\n\n    let requestA = doc.createElement('a')\n    requestA.href = url\n\n    // 如果`url`的值不包含`protocol`和`host`(比如相对路径), 在标准浏览器下, 会自定补全`requestA`对象的`protocal`和`host`属性.\n    // 但在IE8~11下, 不会自动补全. 即`requestA.protocol`和`requestA.host`的值都是空的.\n    // 在IE11的不同小版本下, requestA.protocol的值有的是`:`, 有的是空字符串, 太奇葩啦!\n    if (__FALLBACK__) {\n        if (isIE && (requestA.protocol === ':' || requestA.protocol === '')) {\n            if (requestA.hostname === '') {\n                //alert(0)\n                return false\n            } else {\n                //alert('1:'+(originA.hostname !== requestA.hostname || originA.port !== requestA.port))\n                return originA.hostname !== requestA.hostname || originA.port !== requestA.port\n            }\n        }\n    }\n\n    // 标准浏览器\n    return originA.hostname !== requestA.hostname || originA.port !== requestA.port || originA.protocol !== requestA.protocol\n}\n\n/**\n * 对象扩展\n * @param  {Object} receiver\n * @param  {Object} supplier\n * @return {Object} 扩展后的receiver对象\n * @note 这个extend方法是定制的, 不要拷贝到其他地方用!!!\n * @note 这个extend方法是深拷贝方式的!!!\n */\nfunction _extend(receiver = {}, supplier = {}, deepCopy = FALSE) {\n    for (let key in supplier) {\n        // `supplier`中不是未定义的键 都可以执行扩展\n        if (supplier.hasOwnProperty(key) && supplier[key] !== undefined) {\n            if (deepCopy === TRUE) {\n                if (isArray(supplier[key])) {\n                    receiver[key] = [].concat(supplier[key])\n                } else if (isPlainObject(supplier[key])) {\n                    receiver[key] = extend({}, supplier[key])\n                } else {\n                    receiver[key] = supplier[key]\n                }\n            } else {\n                receiver[key] = supplier[key]\n            }\n        }\n    }\n    return receiver\n};\n\nconst extend = redo(_extend)\nexport {extend}\n\nexport function likeArray(v) {\n    if (!v) {\n        return false\n    }\n    return typeof v.length === NUMBER\n}\n\n/**\n *\n * @param v {Array|Object} 遍历目标对象\n * @param fn {Function} 遍历器 会被传入两个参数, 分别是`value`和`key`\n */\nexport function each(v, fn) {\n    let i, l\n    if (likeArray(v)) {\n        for (i = 0, l = v.length; i < l; i++) {\n            if (fn.call(v[i], v[i], i) === false) return\n        }\n    } else {\n        for (i in v) {\n            if (fn.call(v[i], v[i], i) === false) return\n        }\n    }\n}\n\n/**\n * 将对象的`键`排序后 返回一个新对象\n *\n * @param obj {Object} 被操作的对象\n * @returns {Object} 返回的新对象\n * @case 这个函数用于对比两次请求的参数是否一致\n */\nexport function sortPlainObjectKey(obj) {\n    let clone = {}\n    let key\n    let keyArray = []\n    for (key in obj) {\n        if (obj.hasOwnProperty(key)) {\n            keyArray.push(key)\n            if (isPlainObject(obj[key])) {\n                obj[key] = sortPlainObjectKey(obj[key])\n            }\n        }\n    }\n    keyArray.sort()\n    for (let i=0, l=keyArray.length; i<l; i++) {\n        clone[keyArray[i]] = obj[keyArray[i]]\n    }\n    return clone\n}\n\nexport function serialize(params, obj, traditional, scope) {\n    let type, array = isArray(obj), hash = isPlainObject(obj)\n    each(obj, function(value, key) {\n        type = toString.call(value)\n        if (scope) {\n            key = traditional ? scope : scope + '[' + (hash || type == OBJECT_TYPE || type == ARRAY_TYPE ? key : '') + ']'\n        }\n\n        // 递归\n        if (!scope && array) {\n            params.add(value.name, value.value)\n        }\n        // recurse into nested objects\n        else if (type == ARRAY_TYPE || (!traditional && type == OBJECT_TYPE)) {\n            serialize(params, value, traditional, key)\n        } else {\n            params.add(key, value)\n        }\n    })\n}\n\n/**\n * 功能和`Zepto.param`一样\n * @param obj {Object}\n * @param traditional {Boolean}\n * @returns {string}\n * $.param({ foo: { one: 1, two: 2 }}) // \"foo[one]=1&foo[two]=2)\"\n * $.param({ ids: [1,2,3] })           // \"ids[]=1&ids[]=2&ids[]=3\"\n * $.param({ ids: [1,2,3] }, true)     // \"ids=1&ids=2&ids=3\"\n * $.param({ foo: 'bar', nested: { will: 'not be ignored' }})    // \"foo=bar&nested[will]=not+be+ignored\"\n * $.param({ foo: 'bar', nested: { will: 'be ignored' }}, true)  // \"foo=bar&nested=[object+Object]\"\n * $.param({ id: function(){ return 1 + 2 } })  // \"id=3\"\n */\nexport function param(obj, traditional) {\n    var params = []\n    params.add = (key, value) => {\n        if (isFunction(value)) value = value()\n        if (value == NULL) value = ''\n        params.push(escape(key) + '=' + escape(value))\n    }\n    serialize(params, obj, traditional)\n    return params.join('&').replace(/%20/g, '+')\n}\n\nexport function decodeParam(str) {\n    return decodeURIComponent(str.replace(/\\+/g, ' '))\n}\n\n// 给URL追加查询字符串\nexport function appendQueryString(url, obj, urlStamp, traditional) {\n    // 是否添加时间戳\n    if (urlStamp) {\n        obj[isBoolean(urlStamp) ? '_stamp' : urlStamp] = +new Date()\n    }\n    let queryString = param(obj, traditional)\n\n    if (queryString) {\n        return url + (~url.indexOf('?') ? '&' : '?') + queryString\n    } else {\n        return url\n    }\n}","import {\n    extend, appendQueryString, noop, isCrossDomain, isBoolean, param,\n    TRUE, FALSE, NULL, UNDEFINED\n} from './util'\n\nconst supportCORS = UNDEFINED !== typeof XMLHttpRequest && 'withCredentials' in (new XMLHttpRequest())\nconst GET = 'GET'\nconst POST = 'POST'\nconst SCRIPT = 'script'\nconst XML = 'xml'\nconst JS0N = 'json' // NOTE 不能使用`JSON`，这里用数字零`0`代替了字母`O`\n\n// minetype的简写映射\n// TODO 考虑是否优化\nconst acceptToRequestHeader = {\n    // IIS returns `application/x-javascript` 但应该不需要支持\n    '*':    '*/' + '*',\n    script: 'text/javascript, application/javascript, application/ecmascript, application/x-ecmascript',\n    json:   'application/json, text/json',\n    xml:    'application/xml, text/xml',\n    html:   'text/html',\n    text:   'text/plain'\n}\n\n// 设置请求头\n// 没有处理的事情：跨域时使用者传入的多余的Header没有屏蔽 没必要\nconst setHeaders = (xhr, options) => {\n\n    const header = {\n        Accept: acceptToRequestHeader[options.accept]\n    }\n\n    // 如果没有跨域 则打该标识 业界通用做法\n    if (!isCrossDomain(options.url)) {\n        header['X-Requested-With'] = 'XMLHttpRequest'\n    }\n\n    // 如果POST方法，没有明确指定编码方式，默认urlencoded，\n    // TODO v3.x将去掉改处理！！！需要文档强调\n    if (options.method === 'POST' && !header['Content-Type']) {\n        header['Content-Type'] = 'application/x-www-form-urlencoded'\n    }\n\n    extend(header, options.header)\n\n    for (let key in header) {\n        xhr.setRequestHeader(key, header[key])\n    }\n\n    return header\n}\n\n// 绑定事件\n// NOTE 还得继续使用readystatechange事件\n//      比较遗憾 到现在了依然不能安全的使用load和error等事件 就连PC端的chrome都有下面的问题\n//      500: 触发load loadend 不触发error\n//      404: 触发load loadend 不触发error\nconst setEvents = (xhr, options) => {\n\n    // 再高级的浏览器都有低级错误! 已经不能在相信了!\n    // MAC OSX Yosemite Safari上的低级错误: 一次`ajax`请求的`loadend`事件完成之后,\n    // 如果执行`xhr.abort()`, 居然还能触发一遍`abort`和`loadend`事件!!!\n    // `_finished`标识一次完整的请求是否结束, 如果已结束, 则不再触发任何事件\n    xhr._finished = FALSE\n\n    const readyStateChangeFn = () => {\n        if (xhr._finished) {\n            return\n        }\n        //console.log('xhr.readyState', xhr.readyState, 'xhr.status', xhr.status, xhr)\n        if (xhr.readyState === 4) {\n            // 如果请求被取消(aborted) 则`xhr.status`会是0 所以不会进入`success`回调\n            if ((xhr.status >= 200 && xhr.status < 300) || xhr.status === 304) {\n                //let mime = xhr.getResponseHeader('Content-Type')\n                let data = xhr.responseText\n                switch (options.accept) {\n                    case JS0N:\n                        try {\n                            data = JSON.parse(data)\n                        } catch (e) {\n                            console.warn('The response can NOT be parsed to JSON object.', data)\n                        }\n                        break\n                    case SCRIPT:\n                        (1, eval)(data)\n                        break\n                    case XML:\n                        data = xhr.responseXML\n                        break\n                    //case HTML:\n                    //case TEXT:\n                    default:\n                        break\n                }\n                options.success(data, xhr)\n            } else {\n                // 因为取消时会先触发原生的`onreadystatechange`响应，后触发`onAbort`回调，所以\n                // 如果请求被取消(aborted) 则`xhr.status`会是0 程序走到这里的时候，`xhr._aborted`状态是false，\n                // 需要排除，不应该触发`error`回调\n                !xhr._aborted && options.error(xhr.status, xhr)\n            }\n        }\n    }\n\n\n    // readyState value:\n    //   0: UNSET 未初始化\n    //   1: OPENED\n    //   2: HEADERS_RECEIVED\n    //   3: LOADING\n    //   4: DONE 此时触发load事件\n    xhr.addEventListener(\"readystatechange\", readyStateChangeFn)\n\n    const abortFn = () => {\n        if (xhr._finished) {\n            return\n        }\n        options.abort(xhr.status, xhr)\n    }\n\n    xhr.addEventListener('abort', abortFn)\n\n    const loadedFn = () => {\n        if (xhr._finished) {\n            return\n        }\n        xhr._finished = true\n        options.complete(xhr.status, xhr)\n        delete xhr._aborted\n    }\n\n    xhr.addEventListener('loadend', loadedFn)\n}\n\nconst defaultOptions = {\n    url: '',\n    mark: {},\n    useMark: TRUE,\n    method: GET,\n    accept: '*',\n    data: NULL,\n    header: {},\n    withCredentials: NULL, // 根据`url`是否跨域决定默认值. 如果显式配置该值(必须是布尔值), 则个使用配置值\n    urlStamp: TRUE,\n    success: noop,\n    error: noop,\n    complete: noop,\n    abort: noop,\n    log: FALSE,\n    traditional: FALSE,\n}\n\nexport default function ajax(options) {\n\n    options = extend({}, defaultOptions, options)\n\n    // 是否跨域\n    let isCD = isCrossDomain(options.url)\n\n    let xhr = new XMLHttpRequest()\n\n    setEvents(xhr, options)\n\n    xhr.open(options.method, appendQueryString(\n        options.url,\n        extend({}, options.useMark ? options.mark : {}, options.method === GET ? options.data : {}),\n        options.urlStamp,\n        options.traditional\n    ))\n\n    // NOTE 生产环境的Server端, `Access-Control-Allow-Origin`的值一定不要配置成`*`!!! 而且`Access-Control-Allow-Credentials`应该是true!!!\n    // NOTE 如果Server端的`responseHeader`配置了`Access-Control-Allow-Origin`的值是通配符`*` 则前端`withCredentials`是不能使用true值的\n    // NOTE 如果Client端`withCredentials`使用了true值 则后端`responseHeader`中必须配置`Access-Control-Allow-Credentials`是true\n    xhr.withCredentials = isBoolean(options.withCredentials) ? options.withCredentials : isCD\n\n    // 设置requestHeader\n    const header = setHeaders(xhr, options)\n\n    let data\n\n    if (header['Content-Type'] && ~header['Content-Type'].indexOf('application/x-www-form-urlencoded')) {\n        data = param(options.data, options.traditional)\n    } else {\n        data = JSON.stringify(options.data)\n    }\n\n    // 文档建议说 send方法如果不发送请求体数据 则null参数在某些浏览器上是必须的\n    xhr.send(options.method === GET ? NULL : data === NULL ? NULL : data)\n\n    let originAbort = xhr.abort\n\n    // 重写`abort`方法\n    xhr.abort = () => {\n        xhr._aborted = true\n        // NOTE 直接调用`originAbort()`时 浏览器会报 `Illegal invocation` 错误\n        originAbort.call(xhr)\n    }\n\n    return xhr\n}\n\n// 移动端不需要fallback\najax.fallback = false\najax.supportCORS = supportCORS","import {appendQueryString, noop, extend, makeRandom, hasWindow, NULL, TRUE, FALSE} from './util'\nconst win = hasWindow ? window : NULL\nconst doc = hasWindow ? document : NULL\nconst SCRIPT = 'script'\n\nconst removeScript = (script) => {\n    script.onerror = NULL\n    script.parentNode.removeChild(script)\n    script = NULL\n}\nlet head = NULL\nconst insertScript = (url, options) => {\n    let script = doc.createElement(SCRIPT)\n    script.src = url\n    script.async = true\n\n    if (options.crossOrigin) {\n      script.crossOrigin = true\n    }\n\n    script.onerror = (e) => {\n        win[options.callbackName] = NULL\n        options.error(e)\n        options.complete()\n    }\n\n    head = head || doc.getElementsByTagName('head')[0]\n    head.insertBefore(script, head.firstChild)\n    return script\n}\n\nconst defaultOptions = {\n    url: '',\n    mark: {},\n    useMark: TRUE,\n    data: {},\n    urlStamp: TRUE,\n    success: noop,\n    error: noop,\n    complete: noop,\n    log: FALSE,\n    flag: 'callback',\n    callbackName: 'jsonp{id}',\n    traditional: FALSE,\n    crossOrigin: FALSE\n}\n\nexport default function jsonp(options) {\n\n    options = extend({}, defaultOptions, options)\n\n    const callbackName = options.callbackName = options.callbackName.replace(/\\{id\\}/, makeRandom())\n\n    const originComplete = options.complete\n\n    let script\n\n    // 二次包装的`complete`回调\n    options.complete = () => {\n        // 删除脚本\n        removeScript(script)\n        originComplete()\n    }\n\n    // 成功回调\n    win[callbackName] = (data) => {\n        // JSONP函数需要立即删除 用于`IE8`判断是否触发`onerror`\n        win[callbackName] = NULL\n        options.success(data)\n        options.complete()\n    }\n\n    // 生成`url`\n    let url = appendQueryString(\n        options.url,\n        extend({[options.flag]: callbackName}, options.useMark ? options.mark : {}, options.data),\n        options.urlStamp,\n        options.traditional\n    )\n\n    // 插入脚本\n    script = insertScript(url, options)\n    \n    return {\n        abort() {\n            // 覆盖成功回调为无数据处理版本\n            win[callbackName] = () => {\n                win[callbackName] = NULL\n            }\n            removeScript(script)\n        }\n    }\n}\n","import {extend, NULL, TRUE, FALSE, isAbsoluteUrl, isRelativeUrl, EMPTY} from './util'\nimport ajax from './__AJAX__'\nimport jsonp from './__JSONP__'\n\nlet rid = 0\nconst getRid = function () {\n    return rid++\n}\n\nexport default class Request {\n\n    constructor(apiInstance) {\n\n        const {_path, config, api, contextId} = apiInstance\n\n        this._apiInstance = apiInstance\n\n        // 单次请求实例的id，用于从`api`实例的`_pendingList`中删除请求实例\n        this._rid = [contextId, _path, getRid()].join('-')\n\n        this._path = _path\n        this.config = config\n        this.storage = api.storage\n        this.contextId = contextId\n\n        // 工作状态\n        this.pending = FALSE\n        this._requester = NULL\n    }\n\n    // 发起网络请求 返回一个Promise实例\n    send({vars, onSuccess, onError, onComplete}) {\n\n        this.vars = vars\n\n        this.onSuccess = onSuccess\n        this.onError = onError\n        this.onComplete = onComplete\n\n        const {config} = this\n\n        // 调用 willFetch 钩子\n        config.willFetch(vars, config, 'remote')\n\n        // 等待状态在此处开启 在相应的`requester`的`complete`回调中关闭\n        this.pending = TRUE\n\n        // 创建请求实例requester\n        if (config.customRequest) {\n            // 使用私有的request方法\n            this._requester = config.customRequest(vars, config, (isSuccess, response) => {\n              // 当isSuccess为false时，response的结构应该是 {message: 'xxx'}\n              isSuccess ? this.processResponse(response) : this.onError(response)\n            })\n        } else if (config.jsonp) {\n            this._requester = this.jsonp()\n        } else {\n            this._requester = this.ajax()\n        }\n\n        // 超时处理\n        if (0 !== config.timeout) {\n            setTimeout(() => {\n                if (this.pending) {\n                    // 取消请求\n                    this.abort()\n\n                    const error = {\n                        timeout: TRUE,\n                        message: 'Timeout By ' + config.timeout + 'ms.'\n                    }\n\n                    this.onError(error)\n                }\n            }, config.timeout)\n        }\n    }\n\n    // 处理结构化的响应数据\n    processResponse(response) {\n        const {config, vars} = this\n        // 调用 didFetch 钩子函数\n        config.didFetch(vars, config)\n\n        // 非标准格式数据的预处理\n        response = config.fit(response, vars)\n\n        if (response.success) {\n            // 数据处理\n            const content = config.process(response.content, vars)\n            this.onSuccess(content)\n        } else {\n            const error = extend({\n                message: '`success` is false, ' + this._path\n            }, response.error)\n            // NOTE response是只读的对象!!!\n            this.onError(error)\n        }\n    }\n\n    // 获取正式接口的完整`url`\n    // @param config {Object}\n    getFinalUrl() {\n        const {config, vars} = this\n        let url = config.mock ? config.mockUrl : config.url\n        if (!url) return EMPTY\n        const prefixKey = config.mock ? 'mockUrlPrefix' : 'urlPrefix'\n        const suffixKey = config.mock ? 'mockUrlSuffix' : 'urlSuffix'\n        const prefix = config[prefixKey] && !isAbsoluteUrl(url) && !isRelativeUrl(url) ? config[prefixKey] : EMPTY\n        const suffix = config[suffixKey] ? config[suffixKey]: EMPTY\n\n        url = prefix + url + suffix\n\n        // 如果是RESTFul API，填充所有的':x'参数\n        if (config.rest) {\n            const restData = vars.data\n            for (let param in restData) {\n                if (~param.indexOf(':')) {\n                    url = url.replace(new RegExp('\\\\/' + param), '/' + restData[param])\n                    delete restData[param]\n                }\n            }\n        }\n\n        return url\n    }\n\n    // 发起Ajax请求\n    // @returns {Object} xhr对象实例\n    ajax() {\n        const {config, vars} = this\n\n        const url = this.getFinalUrl()\n\n        return ajax({\n            traditional: config.traditional,\n            urlStamp: config.urlStamp,\n            mark: vars.mark,\n            useMark: config.mark,\n            log: config.log,\n            url: url,\n            method: config.method,\n            data: vars.data,\n            header: config.header,\n            withCredentials: config.withCredentials,\n            // 强制约定json\n            accept: 'json',\n            success: response => {\n                this.processResponse(response)\n            },\n            error: status => {\n                // 如果跨域使用了自定义的header，且服务端没有配置允许对应的header，此处status为0，目前无法处理。\n                const error = {\n                    status,\n                    message: `Error(status ${status}) in request for ${vars.mark._api}(${url})`\n                }\n                this.onError(error)\n            },\n            complete: () => {\n                this.onComplete()\n                this.pending = FALSE\n                this._requester = NULL\n            }\n        })\n    }\n\n    // 发起jsonp请求\n    // @returns {Object} 带有abort方法的对象\n    jsonp() {\n        const {config, vars} = this\n\n        const url = this.getFinalUrl()\n\n        return jsonp({\n            traditional: config.traditional,\n            log: config.log,\n            mark: vars.mark,\n            useMark: config.mark,\n            url: url,\n            data: vars.data,\n            urlStamp: config.urlStamp,\n            flag: config.jsonpFlag,\n            callbackName: config.jsonpCallbackName,\n            crossOrigin: config.jsonpCrossOrigin,\n            success: response => {\n                this.processResponse(response)\n            },\n            error: () => {\n                const error = {\n                    message: `Not accessable JSONP in request for ${vars.mark._api}(${url})`\n                }\n                this.onError(error)\n            },\n            complete: () => {\n                this.onComplete()\n                this.pending = FALSE\n                this._requester = NULL\n            }\n        })\n    }\n\n    // 取消请求\n    abort() {\n        if (this._requester) {\n            this._requester.abort()\n        }\n    }\n}","export default class Defer {\n  constructor(Promise) {\n    const t = this\n    t.promise = new Promise(function (resolve, reject) {\n      t._resolve = resolve\n      t._reject = reject\n    })\n  }\n\n  resolve(value) {\n    this._resolve.call(this.promise, value)\n  }\n\n  reject(reason) {\n    this._reject.call(this.promise, reason)\n  }\n}","const PREFIX = '_'\nfunction rename (type) {\n    return PREFIX + type\n}\n\nexport default {\n    on: function () {\n        const args = arguments\n        if (typeof args[0] === 'string' && typeof args[1] === 'function') {\n            const type = rename(args[0])\n            this[type]  = this[type] || []\n            this[type].push(args[1])\n        } else if (typeof args[0] === 'object') {\n            const hash = args[0]\n            for (let i in hash) {\n                this.on(i, hash[i])\n            }\n        }\n    },\n    off: function (type, fn) {\n        type = rename(type)\n        if (!fn) {\n            delete this[type]\n        } else {\n            const fns = this[type]\n            fns.splice(fns.indexOf(fn), 1)\n            if (!this[type].length) {\n                delete this[type]\n            }\n        }\n    },\n    // @param {array} args\n    fire: function (type, args, context) {\n        const fns = this[rename(type)]\n        if (!fns) return 'NO_EVENT'\n        for (let i=0, fn; fn = fns[i]; i++) {\n            fn.apply(context || this, [].concat(args))\n        }\n    },\n    hasEvent: function (type) {\n        return !!this[rename(type)]\n    }\n}","import {isNumber, noop, TRUE, FALSE, NULL} from './util'\n\n/**\n * 创建轮询支持\n * @param api {Function} 需要轮询的函数\n */\nexport default function() {\n    const {api} = this\n\n    api.loop = (options, resolveFn = noop, rejectFn = noop) => {\n        if (!options.duration || !isNumber(options.duration)) {\n            throw new Error('Illegal `duration` value for `startLoop` method.')\n        }\n\n        let loopTimer = NULL\n\n        let stop = () => {\n            clearTimeout(loopTimer)\n            loopTimer = NULL\n            stop.looping = FALSE\n        }\n\n        let sleepAndRequest = () => {\n            stop.looping = TRUE\n            api(options.data).then(resolveFn, rejectFn)\n            loopTimer = setTimeout(() => {\n                sleepAndRequest()\n            }, options.duration)\n        }\n\n        sleepAndRequest()\n        \n        return stop\n    }\n}\n","import {noop, isEmptyObject, sortPlainObjectKey, FALSE, TRUE, hasConsole} from './util'\n\nexport default function() {\n    const {api} = this\n    api.soon = (data, successFn = noop, errorFn = noop) => {\n        const vars = this.makeVars(data)\n\n        // 先尝试用`storage`数据快速响应\n        if (api.storageUseable) {\n\n            const result = api.storage.has(vars.queryString)\n\n            if (result.has) {\n                successFn({\n                    fromStorage: TRUE,\n                    content: result.value\n                })\n            }\n        }\n\n        // 再发起网络请求(内部会更新`storage`)\n        this.send(vars).then(content => {\n            successFn({\n                fromStorage: FALSE,\n                content\n            })\n        }, error => {\n            errorFn(error)\n        })['catch'](function (e) {\n            hasConsole && console.error(e)\n        })\n    }\n}","import {noop, NULL, TRUE, FALSE, EMPTY, hasWindow} from './util'\n\nconst config = {\n\n    // 默认参数\n    data: {},\n\n    // 请求完成钩子函数\n    didFetch: noop,\n\n    // 预处理回调\n    fit: noop,\n\n    // 自定义header, 只针对非跨域的ajax有效, 跨域时将忽略自定义header\n    header: {},\n\n    // 是否忽律接口自身的并发请求\n    ignoreSelfConcurrent: FALSE,\n\n    // 有两种格式配置`jsonp`的值\n    // {Boolean}\n    // {Array} eg: [TRUE, 'cb', 'j{id}']\n    jsonp: FALSE,\n\n    // 是否在`jsonp`的`script`的标签上加`crossorigin`属性\n    jsonpCrossOrigin: FALSE,\n\n    // 是否开启log信息\n    log: FALSE,\n\n    // 非GET方式对JSONP无效\n    method: 'GET',\n\n    // 是否开启mock模式\n    mock: FALSE,\n\n    mockUrl: EMPTY,\n\n    // 全局`mockUrl`前缀\n    mockUrlPrefix: EMPTY,\n\n    // 全局`mockUrl`后缀\n    mockUrlSuffix: EMPTY,\n\n    // 成功回调\n    process: noop,\n\n    // 私有Promise对象, 如果不想用浏览器原生的Promise对象的话\n    Promise: hasWindow ? window.Promise : NULL,\n\n    // 是否是rest风格\n    rest: FALSE,\n\n    // 默认不执行重试\n    retry: 0,\n\n    // 使用已有的request方法\n    customRequest: NULL,\n\n    // 0表示不启动超时处理\n    timeout: 0,\n\n    // http://zeptojs.com/#$.param\n    traditional: FALSE,\n\n    url: EMPTY,\n\n    // 全局`url`前缀\n    urlPrefix: EMPTY,\n\n    // 是否在`url`上添加时间戳, 用于避免浏览器的304缓存\n    urlStamp: TRUE,\n\n    // 全局`url`后缀\n    urlSuffix: EMPTY,\n\n    // TODO 文档中没有暴露\n    withCredentials: NULL,\n\n    // 请求之前调用的钩子函数\n    willFetch: noop,\n\n    // 扩展: storage\n    storage: FALSE,\n\n    // 插件，已内置两种\n    // plugins: [\n    //     nattyFetch.plugin.loop\n    //     nattyFetch.plugin.soon\n    // ]\n    plugins: FALSE,\n}\n\nexport default config","import nattyStorage from 'natty-storage'\nimport * as util from './util'\n\nconst {\n    extend, runAsFn, isBoolean,\n    isArray, isFunction, sortPlainObjectKey, isEmptyObject,\n    isPlainObject, dummyPromise,\n    isString, NULL, TRUE, FALSE, hasConsole\n} = util\n\nimport Request from './request'\nimport ajax from './__AJAX__'\nimport Defer from './defer'\nimport event from './event'\n\n// 内置插件\nimport pluginLoop from './plugin.loop'\nimport pluginSoon from './plugin.soon'\n\n// 全局默认配置\nimport defaultGlobalConfig from './default-global-config'\n\n// 随`setGlobal`方法而变化的运行时全局配置\nlet runtimeGlobalConfig = extend({}, defaultGlobalConfig)\n\nclass API {\n    constructor(path, options, contextConfig, contextId) {\n        this._path = path\n\n        this.contextConfig = contextConfig\n\n        this.contextId = contextId\n\n        // 进行中的请求列队\n        this._pendingList = []\n\n        this.storage = NULL\n\n        const config = this.config = this.processAPIOptions(options)\n\n        // `api`的实现\n        // @param data {Object|Function}\n        // @returns {Object} Promise Object\n        this.api = (data) => {\n\n            // 处理列队中的请求\n            if (this._pendingList.length) {\n                // 是否忽略自身的并发请求\n                if (config.ignoreSelfConcurrent) {\n                    return dummyPromise\n                }\n                // 是否取消上一个请求\n                if (config.overrideSelfConcurrent) {\n                    this._pendingList[0].abort()\n                }\n            }\n\n            const vars = this.makeVars(data)\n\n            if (this.api.storageUseable) {\n                const result = this.api.storage.has(vars.queryString)\n                if (result.has) {\n                    return new config.Promise(resolve => {\n                        resolve(result.value)\n                    })\n                } else {\n                    return config.retry === 0 ? this.send(vars) : this.sendWithRetry(vars)\n                }\n            } else {\n                return config.retry === 0 ? this.send(vars) : this.sendWithRetry(vars)\n            }\n        }\n\n        this.api.config = config\n\n        this.api.hasPending = () => {\n            return !!this._pendingList.length\n        }\n\n        // 要删除的方法，这个地方是`v2.3.0`版本之前都存在的设计错误，因为：\n        // io.get().then(...) 发送第一次\n        // io.get().then(...) 发送第二次\n        // io.get.abort()     取消哪一次? 并发情况复杂的业务，结果不明确。\n        this.api.abort = () => {\n            hasConsole && console.warn('`abort` method will be deleted later!')\n            for (let i=0, l=this._pendingList.length; i<l; i++) {\n                this._pendingList[i].abort()\n            }\n        }\n\n        this.initStorage()\n\n        // 启动插件\n        let plugins = isArray(config.plugins) ? config.plugins : []\n\n        for (let i=0, l=plugins.length; i<l; i++) {\n            isFunction(plugins[i]) && plugins[i].call(this, this)\n        }\n    }\n\n    // @param {Object} 一次独立的请求数据\n    makeVars(data) {\n        const {config} = this\n        // 每次请求私有的相关数据\n        const vars = {\n            // `url`中的标记\n            mark: {\n                _api: this._path,\n                _mock: config.mock\n            }\n        }\n\n        // `data`必须在请求发生时实时创建\n        // 另外，将数据参数存在私有标记中, 方便API的`process`方法内部使用\n        data = extend({}, runAsFn(config.data), runAsFn(data))\n\n        // 承载请求参数数据\n        vars.data = data\n\n        // 根据`data`创建`storage`查询用的`key`\n        if (this.api.storageUseable) {\n            vars.queryString = isEmptyObject(data) ? 'no-query-string' : JSON.stringify(sortPlainObjectKey(data))\n        }\n\n        return vars\n    }\n\n    // 发送真正的网络请求\n    send(vars) {\n        const {config} = this\n\n        // 每次请求都创建一个请求实例\n        const request = new Request(this)\n\n        this._pendingList.push(request)\n\n        const defer = new Defer(config.Promise)\n\n        request.send({\n            vars,\n            onSuccess: content => {\n                if (this.api.storageUseable) {\n                    this.api.storage.set(vars.queryString, content)\n                }\n                defer.resolve(content)\n                event.fire('g.resolve', [content, config], config)\n                event.fire(this.contextId + '.resolve', [content, config], config)\n            },\n            onError: error => {\n                defer.reject(error)\n                event.fire('g.reject', [error, config, vars], config)\n                event.fire(this.contextId + '.reject', [error, config, vars], config)\n            },\n            onComplete: () => {\n                let indexToRemove\n                for (let i=0, l=this._pendingList.length; i<l; i++) {\n                    if (this._pendingList[i] === request) {\n                        indexToRemove = i\n                        break\n                    }\n                }\n                indexToRemove !== undefined && this._pendingList.splice(indexToRemove, 1)\n            }\n        })\n\n        return defer.promise\n    }\n\n    sendWithRetry(vars) {\n        const {config} = this\n\n        return new config.Promise((resolve, reject) => {\n\n            let retryTime = 0\n            const sendOneTime = () => {\n                // 更新的重试次数\n                vars.mark._retryTime = retryTime\n                this.send(vars).then(content => {\n                    resolve(content)\n                }, error => {\n                    if (retryTime === config.retry) {\n                        reject(error)\n                    } else {\n                        retryTime++\n                        sendOneTime()\n                    }\n                })\n            }\n            sendOneTime()\n        })\n    }\n\n    // 处理API的配置\n    // @param options {Object}\n    processAPIOptions(options) {\n\n        // 插件是不能覆盖的, 应该追加\n        const plugins = [].concat(this.contextConfig.plugins || [], options.plugins || [])\n\n        const config = extend({}, this.contextConfig, options, {\n            plugins\n        })\n\n        // 按照[boolean, callbackKeyWord, callbackFunctionName]格式处理\n        if (isArray(options.jsonp)) {\n            config.jsonp = isBoolean(options.jsonp[0]) ? options.jsonp[0] : FALSE\n            // 这个参数只用于jsonp\n            if (config.jsonp) {\n                config.jsonpFlag = options.jsonp[1]\n                config.jsonpCallbackName = options.jsonp[2]\n            }\n        }\n\n        // 配置自动增强 如果`url`的值有`.jsonp`结尾 则认为是`jsonp`请求\n        // NOTE jsonp是描述正式接口的 不影响mock接口!!!\n        if (!config.mock && !!config.url.match(/\\.jsonp(\\?.*)?$/)) {\n            config.jsonp = TRUE\n        }\n\n        return config\n    }\n\n    // 初始化缓存对象\n    initStorage() {\n        const {config} = this\n\n        // 简易开启缓存的写法\n        if (config.storage === TRUE) {\n            config.storage = {\n                type: 'variable'\n            }\n        }\n\n        // 综合判断缓存是不是可以启用\n        this.api.storageUseable = isPlainObject(config.storage)\n            && (config.method === 'GET' || config.jsonp)\n            && (\n                nattyStorage.supportStorage\n                && (\n                    ['localStorage', 'sessionStorage'].indexOf(config.storage.type) > -1\n                    || config.storage.type === 'variable'\n                )\n            )\n\n        // 创建缓存实例\n        if (this.api.storageUseable) {\n            // 当使用`localStorage`时, 强制指定`key`值。如果没指定, 抛错!\n            // 当使用`variable`或`sessionStorage`时, 如果没指定`key`, 则自动生成内部`key`\n            // !!!为什么在使用`localStorage`时必须指定`key`值???\n            // !!!因为当key发生变化时, `localStorage`很容易产生死数据, 必须强制开发者有意识的去维护`key`值\n            if (config.storage.type === 'localStorage') {\n                if (!config.storage.hasOwnProperty('key') || !config.storage.key) {\n                    throw new Error('`key` is required when `storage.type` is `localStorage`.')\n                }\n            } else {\n                config.storage.key = config.storage.key || [this.contextId, this._path].join('_')\n            }\n\n            // `key`和`tag`的选择原则:\n            // `key`只选用相对稳定的值, 减少因为`key`的改变而增加的残留缓存\n            // 经常变化的值用于`tag`, 如一个接口在开发过程中可能使用方式不一样, 会在`jsonp`和`get`之间切换。\n            this.api.storage = nattyStorage(extend({}, config.storage, {\n                tag: [\n                    config.storage.tag,\n                    config.jsonp ? 'jsonp' : config.method,\n                    config.url\n                ].join('_') // 使用者的`tag`和内部的`tag`, 要同时生效\n            }))\n        }\n    }\n}\n\nconst context = (function () {\n    let count = 0\n\n    return function(contextId, options) {\n\n        if (isString(contextId)) {\n            options = options || {}\n        } else {\n            options = contextId || {}\n            contextId = 'c' + count++\n        }\n\n        const storage = nattyStorage({\n            type: 'variable',\n            key: contextId\n        })\n\n        const ctx = {}\n\n        ctx.api = storage.get()\n\n        ctx._contextId = contextId\n\n        // 插件是不能覆盖的, 应该追加\n        let plugins = [].concat(runtimeGlobalConfig.plugins || [], options.plugins || [])\n\n        ctx._config = extend({}, runtimeGlobalConfig, options, {\n            plugins\n        })\n\n        // 创建api\n        // @param namespace {String} optional\n        // @param APIs {Object} 该`namespace`下的`api`配置\n        ctx.create = function(namespace, APIs) {\n            let hasNamespace = arguments.length === 2 && isString(namespace)\n\n            if (!hasNamespace) {\n                APIs = namespace\n            }\n\n            for (let path in APIs) {\n                storage.set(\n                    hasNamespace ? namespace + '.' + path : path,\n                    new API(\n                        hasNamespace ? namespace + '.' + path : path,\n                        runAsFn(APIs[path]),\n                        ctx._config,\n                        contextId\n                    ).api\n                )\n            }\n\n            ctx.api = storage.get()\n        }\n\n        // 绑定上下文事件\n        ctx.on = function(name, fn) {\n            if (!isFunction(fn)) return\n            event.on(ctx._contextId + '.' + name, fn)\n            return ctx\n        }\n\n        return ctx\n    }\n})()\n\nconst nattyFetch = {}\n\n// 简易接口\n// @param options\nnattyFetch.create = function (options) {\n    return new API('nattyFetch', runAsFn(options), defaultGlobalConfig, 'global').api\n}\n\nextend(nattyFetch, {\n    onlyForModern: !__FALLBACK__,\n    version: '__VERSION__',\n    _util: util,\n    _event: event,\n    _ajax: ajax,\n    context,\n\n    // 执行全局配置\n    // @param options\n    setGlobal(options) {\n        runtimeGlobalConfig = extend({}, defaultGlobalConfig, options)\n        return this\n    },\n\n    // 获取全局配置\n    // @param property {String} optional\n    // @returns {*}\n    getGlobal(property) {\n        return property ? runtimeGlobalConfig[property] : runtimeGlobalConfig\n    },\n\n    // 绑定全局事件\n    on(name, fn) {\n        if (!isFunction(fn)) return\n        event.on('g.' + name, fn)\n        return this\n    },\n\n    // 插件名称空间\n    plugin: {\n        loop: pluginLoop,\n        soon: pluginSoon\n    }\n})\n\n// 内部直接将运行时的全局配置初始化到默认值\nnattyFetch.setGlobal(defaultGlobalConfig)\n\nexport default nattyFetch"],"names":["const","hasConsole","NULL","TRUE","FALSE","dummyPromise","isBoolean","isString","isFunction","runAsFn","isPlainObject","isEmptyObject","let","isArray","extend","sortPlainObjectKey","doc","SCRIPT","defaultOptions","this","param","defaultGlobalConfig","config"],"mappings":"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"}
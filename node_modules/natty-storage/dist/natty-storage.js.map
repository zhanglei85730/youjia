{"version":3,"file":"natty-storage.js","sources":["../src/util.js","../src/natty-storage.js"],"sourcesContent":["\nexport const hasWindow = 'undefined' !== typeof window;\nexport const hasConsole = 'undefined' !== typeof console;\nconst NULL = null\n\n/**\n * 变换两个参数的函数到多个参数\n * @param  {Function} fn 基函数\n * @return {Function} 变换后的函数\n * @demo\n *      function add(x, y) { return x+y; }\n *      add = redo(add);\n *      add(1,2,3) => 6\n */\nconst redo = fn => {\n\treturn function() {\n\t\tconst args = arguments\n\t\tlet ret = fn(args[0], args[1])\n\t\tfor (let i = 2, l = args.length; i < l; i++) {\n\t\t\tret = fn(ret, args[i])\n\t\t}\n\t\treturn ret\n\t}\n};\n\nconst OBJECT = 'object'\nconst isObject = v => {\n\treturn typeof v === OBJECT && v !== NULL\n}\n\nconst isWindow = v => {\n\treturn v !== NULL && v === v.window\n}\n\n// 参考了zepto\nexport const isPlainObject = v => {\n\treturn v !== NULL && isObject(v) && !isWindow(v) && Object.getPrototypeOf(v) === Object.prototype\n}\n\nconst ARRAY_TYPE = '[object Array]'\nexport const isArray = Array.isArray || (v => Object.prototype.toString.call(v) === ARRAY_TYPE)\n\n/**\n * 对象扩展\n * @param  {Object} receiver\n * @param  {Object} supplier\n * @return {Object} 扩展后的receiver对象\n * @note 这个extend方法是定制的, 不要拷贝到其他地方用!!!\n */\nlet _extend = (receiver = {}, supplier = {}) => {\n    for (let key in supplier) {\n        // `supplier`中不是未定义的键 都可以执行扩展\n        if (supplier.hasOwnProperty(key) && supplier[key] !== undefined) {\n            if (isArray(supplier[key])) {\n                receiver[key] = [].concat(supplier[key]);\n            } else if (isPlainObject(supplier[key])) {\n                receiver[key] = _extend({}, supplier[key]);\n            } else {\n                receiver[key] = supplier[key];\n            }\n        }\n    }\n    return receiver;\n};\n\nexport const extend = redo(_extend)\n\nexport const noop = function () {}\n","import {extend, isPlainObject, noop, hasWindow, hasConsole} from './util'\n\nconst NULL = null\nconst EMPTY = ''\nconst TRUE = true\nconst FALSE = !TRUE\nconst UNDEFINED = undefined\nconst supportStorage = isSupportStorage()\n\n// 全局默认配置\nlet defaultGlobalConfig = {\n    // localStorage, sessionStorage, variable\n    type: 'variable',\n\n    // 存到浏览器缓存中使用的键\n    key: EMPTY,\n\n    // 版本号\n    tag: EMPTY,\n\n    // 有效期长, 单位ms\n    duration: 0,\n\n    // 有效期至, 时间戳\n    until: 0\n}\n\nclass Storage {\n    constructor(options = {}) {\n\n        this.config = extend({}, defaultGlobalConfig, options)\n\n        // 必须配置`key`!!! 无论什么类型!!!\n        if (!this.config.key) {\n            throw new Error('`key` is required when creating a storage!')\n        }\n\n        this._storage = (this.config.type !== 'variable' && supportStorage) ?\n            createStorage(this.config.type) : createVariable()\n\n        this._CHECK_KEY = 'NSCheck:' + this.config.key\n        this._DATA_KEY = 'NSData:' + this.config.key\n\n        // 每个`storage`实例对象都是全新的, 只有`storage`实例的数据才可能是缓存的.\n        this._createStamp = +new Date()\n\n        // 数据备份\n        // 每次set新值之前，先备份当前数据，如果set过程中失败了，则恢复该备份数据\n        this._backupData = {}\n\n        // 用于有效性验证的数据\n        this._checkData = this._storage.get(this._CHECK_KEY)\n\n        // 当前`key`的`storage`是否已经存在\n        this._isNew = this._checkData === NULL\n    }\n\n    // 惰性初始化 在首次调用`set、get、remove`方法时才执行一次 且只执行一次\n    // @private\n    // @note 为什么要做惰性初始化, 因为当数据大时，可以把读取数据的时间推迟\n    // 到第一次调用`set、get、remove`方法时, 从而可以非常快的创建`storage`实例\n    _lazyInit() {\n\n        // 没有对应的本地缓存 或 本地缓存已过期 则 创建新的`storage`实例\n        if (this._isNew || this.isOutdated()) {\n            // 新的数据内容\n            this._storage.set(this._DATA_KEY, this._data = {})\n        }\n\n        // 如果有对应的本地缓存，则将数据添加到`this._data`上\n        else {\n            this._data = this._storage.get(this._DATA_KEY)\n            if (this._data === NULL) {\n                this._storage.set(this._DATA_KEY, this._data = {})\n            }\n        }\n\n        // 更新验证条件，用于下次检查有效性\n        // 只有真正调用了实例方法，才会更新验证数据。\n        // 这样可以在`nattyStorage.clean`方法中，将那些仅实例化但不使用的缓存实例清理掉。\n        this._storage.set(this._CHECK_KEY, this._checkData = {\n            key: this.config.key,\n            tag: this.config.tag,\n            lastUpdate: this._createStamp,\n            duration: this.config.duration,\n            until: this.config.until\n        })\n    }\n\n    // 判断当前`key`的`storage`是否已经过期\n    // @returns {boolean}\n    isOutdated() {\n\n        if (this.config.tag && this.config.tag !== this._checkData.tag) {\n            return TRUE\n        }\n\n        const now = +new Date()\n        // 注意要使用`_checkData`的`duration`验证, 而不是用`config`的`duration`验证!!\n        if (this._checkData.duration && now - this._checkData.lastUpdate > this._checkData.duration) {\n            return TRUE\n        }\n\n        if (this._checkData.until && now > this._checkData.until) {\n            return TRUE\n        }\n\n        return FALSE\n    }\n\n    // 同步设置数据\n    // @param path {Any} optional 要设置的值的路径 或 要设置的完整值\n    // @param value {Any} 要设置的值\n    set(path, data) {\n        if (!this._data) {\n            this._lazyInit()\n        }\n\n        // step1: 备份数据\n        this._backupData = this._data\n\n\n        try {\n            // step2: 更新`this._data`\n            // 注意 `setValueByPath`方法是有抛错场景的 比如给字符串值又添加了新的属性\n            setValueByPath(path, data, this._data)\n\n            // step3: 将`this._data`存储到`storage`中\n            this._storage.set(this._DATA_KEY, this._data)\n        } catch (e) {\n            // 如果存储失败了，恢复原有数据\n            // 保持`this._data`和`storage`中的值同步，是最基本的功能\n            this._storage.set(this._DATA_KEY, this._data = this._backupData)\n\n            throw new Error(e)\n        }\n    }\n\n    // 获取指定的路径的数据\n    // @param path {String} optional 要获取的值的路径 如果不传 则返回整体值\n    // @returns {Any}\n    // instance.get()\n    // instance.get('foo')\n    // instance.get('foo.bar')\n    get(path, fallbackValue) {\n        if (!this._data) {\n            this._lazyInit()\n        }\n\n        let data\n\n        try {\n            if (path) {\n                data = getValueByPath(path, this._data)\n            } else {\n                data = this._data\n            }\n        } catch (e) {\n            throw new Error(e)\n        }\n\n        return data !== UNDEFINED ? data : fallbackValue\n    }\n\n    // 返回指定的路径是否有值\n    // @param path {String} optional 要查询的路径\n    has(path) {\n        if (!this._data) {\n            this._lazyInit()\n        }\n\n        if (!path) {\n            throw new Error('a `key|path` argument should be passed into the `has` method')\n        }\n\n        return hasValueByPath(path, this._data) ? {\n            has: TRUE,\n            value: getValueByPath(path, this._data)\n        }: {\n            has: FALSE,\n            value: UNDEFINED\n        }\n    }\n\n    // 删除指定的路径的数据, 包括键本身\n    // @param path {String} optional 要获取的值的路径 如果不传 则返回整体值\n    remove(path) {\n        if (!this._data) {\n            this._lazyInit()\n        }\n\n        // step1: 备份数据\n        this._backupData = this._data\n\n        // step2: 更新`this._data`\n        if (path) {\n            // 如果有`path` 删除对应的键值对\n            removeKeyAndValueByPath(path, this._data)\n        } else {\n            // 删除所有数据, 即复原到初始空对象\n            this._data = {}\n        }\n\n        // step3: 将`this._data`存储到`storage`中\n        try {\n            this._storage.set(this._DATA_KEY, this._data)\n        } catch (e) {\n            // 如果存储失败了，恢复原有数据\n            // 保持`this._data`和`storage`中的值同步，是最基本的功能\n            this._storage.set(this._DATA_KEY, this._data = this._backupData)\n            throw new Error(e)\n        }\n    }\n\n    // 销毁当前`storage`实例\n    destroy() {\n        this._data = NULL\n        this._checkData = NULL\n        this._storage.remove(this._DATA_KEY)\n        this._storage.remove(this._CHECK_KEY)\n        for (let prop in this.constructor.prototype) {\n            if (this.constructor.prototype.hasOwnProperty(prop)) {\n                this[prop] = UNDEFINED\n            }\n        }\n    }\n\n    dump() {\n        if (!this._data) {\n            this._lazyInit()\n        }\n\n        if (JSON && hasConsole) {\n            console.log(JSON.stringify(this._data, NULL, 4))\n        }\n    }\n}\n\n// 添加异步方法：asyncSet asyncGet asyncHas asyncRemove asyncDestroy\nconst methodHasAsyncMode = ['set', 'get', 'has', 'remove', 'destroy']\nfor (let i=0, l=methodHasAsyncMode.length; i<l; i++) {\n    let method = methodHasAsyncMode[i]\n    Storage.prototype['async' + method.charAt(0).toUpperCase() + method.substr(1)] = function () {\n        return new Promise((resolve, reject) => {\n            try {\n                resolve(this[method].apply(this, arguments))\n            } catch(e) {\n                reject(e)\n            }\n        })\n    }\n}\n\nfunction createStorage(storage) {\n    //  不用担心这个window, 这个函数能调用, 说明已经是在浏览器端了\n    storage = window[storage]\n    // storage = storage === 'localStorage' ? localStorage : sessionStorage\n    return {\n        // NOTE  值为undefined的情况, JSON.stringify方法会将键删除\n        // JSON.stringify({x:undefined}) === \"{}\"\n        set: function (key, value) {\n            storage.setItem(key, JSON.stringify(value))\n        },\n        get: function (key) {\n            let value = storage.getItem(key)\n            // alert(localStorage[key])\n            if (!value) return NULL\n            try {\n                value = JSON.parse(value)\n            } catch (e) {\n            }\n            return value\n        },\n        remove: function (key) {\n            storage.removeItem(key)\n        }\n    }\n}\n\nlet variable = {}\nfunction createVariable() {\n    let storage = variable\n    return {\n        set: function (key, value) {\n            storage[key] = value\n        },\n        get: function (key) {\n            // 当对应的键不存在时, 返回值保持和`storage`一致。\n            if (!(key in storage)) {\n                return NULL\n            }\n            return storage[key]\n        },\n        remove: function (key) {\n            delete storage[key]\n        }\n    }\n}\n\nfunction reserveString (str) {\n    return str.split(EMPTY).reverse().join(EMPTY)\n}\n\nfunction splitPathToKeys (path) {\n    var ret\n    if (path.indexOf('\\\\.') === -1) {\n        ret = path.split('.')\n    } else {\n        ret = reserveString(path).split(/\\.(?!\\\\)/).reverse()\n        for (var i=0, l=ret.length; i<l; i++) {\n            ret[i] = reserveString(ret[i].replace(/\\.\\\\/g, '.'))\n        }\n    }\n    return ret\n}\n\n// 注意 该方法是有抛错场景的\nfunction setValueByPath(path, value, data) {\n    let keys = splitPathToKeys(path)\n    let bottomData = data\n    while (keys.length) {\n        let key = keys.shift()\n        if (keys.length) {\n            bottomData[key] = bottomData[key] || {}\n            bottomData = bottomData[key]\n        } else {\n            if (isPlainObject(bottomData)) {\n                bottomData[key] = value\n            } else {\n                throw new Error('Cannot create property `'+key+'` on non-object value, path:`'+path+'`')\n            }\n        }\n    }\n    return data\n}\n\nfunction getValueByPath(path, data, isKey) {\n    isKey = isKey || false\n    if (isKey === true || path.indexOf('.') === -1) {\n        return data[path]\n    } else {\n        let keys = splitPathToKeys(path)\n\n        while(keys.length) {\n            let key = keys.shift()\n            data = getValueByPath(key, data, true)\n\n            if (typeof data !== 'object' || data === UNDEFINED) {\n                if (keys.length) data = UNDEFINED\n                break\n            }\n        }\n        return data\n    }\n}\n\nfunction hasValueByPath(path, data, isKey) {\n    // 首次调用, 如果没有`.`, 就是key的含义\n    isKey = isKey || path.indexOf('.') === -1\n    if (isKey) {\n        return data.hasOwnProperty(path)\n    } else {\n        let keys = splitPathToKeys(path)\n        while(keys.length) {\n            let key = keys.shift()\n            let hasKey = data.hasOwnProperty(key)\n            if (hasKey && keys.length) {\n                data = getValueByPath(key, data, true)\n                if (!isPlainObject(data)) {\n                    return FALSE\n                }\n            } else {\n                return hasKey\n            }\n        }\n    }\n}\n\nfunction removeKeyAndValueByPath(path, data) {\n    let keys = splitPathToKeys(path)\n    let bottomData = data\n    while (keys.length) {\n        let key = keys.shift()\n        if (keys.length) {\n            bottomData[key] = bottomData[key] || {}\n            bottomData = bottomData[key]\n        } else {\n            delete bottomData[key]\n        }\n    }\n    return data\n}\n\nfunction isSupportStorage() {\n    if (!hasWindow) {\n        return FALSE\n    }\n\n    if (typeof localStorage !== 'object') {\n        return FALSE\n    }\n\n    // 执行到这里，说明存在`storage`对象, 但, 有了也不一定能用!!! 比如隐身模式, 所以需要进一步验证\n    // `Safari`在隐身模式下会触发错误\n    let support = TRUE\n    try {\n        const a = '__nstest__'\n        localStorage.setItem(a, a)\n        support = localStorage.getItem(a) === a\n        localStorage.removeItem(a)\n    } catch (e) {\n        support = FALSE\n    }\n    return support\n}\n\nconst nattyStorage = (options) => {\n    return new Storage(options)\n}\n\nnattyStorage.version = '__VERSION__'\nnattyStorage._variable = variable\nnattyStorage.supportStorage = supportStorage\n\nnattyStorage.each = function (fn = noop) {\n    const map = {\n        variable: nattyStorage._variable\n    }\n\n    if (supportStorage) {\n        map.localStorage = localStorage\n        map.sessionStorage = sessionStorage\n    }\n\n    for (let type in map) {\n        for (let key in map[type]) {\n            if (key.indexOf('NSCheck:') > -1) {\n                let storage = nattyStorage({\n                    key: key.match(/NSCheck:(.*)/)[1],\n                    type: type\n                })\n                fn(storage)\n            }\n        }\n    }\n}\n\n// 清理localStorage中过期的缓存\nnattyStorage.clean = function () {\n    this.each(function (storage) {\n        if (storage.isOutdated()) {\n            storage.destroy()\n        }\n    })\n}\n\nnattyStorage.list = function () {\n    this.each(function (storage) {\n        hasConsole && console.log(storage.config.type, storage.config.key, storage.get())\n    })\n}\n\n// 内置处理一次过期数据\nnattyStorage.clean()\n\nexport default nattyStorage"],"names":["const","NULL","let","this","arguments","i","l"],"mappings":"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"}